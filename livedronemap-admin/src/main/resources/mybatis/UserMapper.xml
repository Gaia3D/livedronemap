<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gaia3d.persistence.UserMapper">

	<!-- 사용자 총 건수 -->
	<select id="getUserTotalCount" parameterType="userInfo" resultType="long">
		/* getUserTotalCount */
		SELECT COUNT(user_id) 
		FROM user_info
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="user_group_id != null and user_group_id > 0">
			user_group_id = #{user_group_id}
			</if>
			<if test="search_word != null and search_word != '' and search_value != null and search_value != '' and search_option == '0'.toString()">
			AND ${search_word} = #{search_value}
			</if>
			<if test="search_word != null and search_word != '' and search_value != null and search_value != '' and search_option == '1'.toString()">
			AND ${search_word} LIKE '%' || #{search_value} || '%'
			</if>
			<if test="status == null or status == ''">
			AND (status IS NULL OR status != '5')
			</if>
			<if test="status != null and status != ''">
			AND status = #{status}
			</if>
			<if test="user_insert_type != null and user_insert_type != ''">
			AND user_insert_type = #{user_insert_type}
			</if>
			<if test="start_date != null and start_date != ''">
			<![CDATA[
			AND insert_date >= TO_TIMESTAMP(#{start_date}, 'YYYYMMDDHH24MISSUS')
			]]>
			</if>
			<if test="end_date != null and end_date != ''">
			<![CDATA[
			AND insert_date <= TO_TIMESTAMP(#{end_date}, 'YYYYMMDDHH24MISSUS')
			]]>
			</if>
			<if test="search_user_name != null and search_user_name != ''">
			AND user_id LIKE '${search_user_name}%'
			</if>
		</trim>
	</select>
	
	<!-- user_group_id 그룹을 제외한 사용자 수 -->
	<select id="getExceptUserGroupUserByGroupIdTotalCount" parameterType="userInfo" resultType="long">
		/* getExceptUserGroupUserByGroupIdTotalCount */
		SELECT COUNT(user_id) 
		FROM user_info
		WHERE
			<![CDATA[
			(user_group_id > #{user_group_id}
			OR user_group_id < #{user_group_id})
			]]>
			<if test="search_word != null and search_word != '' and search_value != null and search_value != ''">
			AND ${search_word} = #{search_value}
			</if>
			<if test="status != null and status != ''">
			AND status = #{status}
			</if>
			<if test="search_except_user_name != null and search_except_user_name != ''">
			AND user_id LIKE '${search_except_user_name}%'
			</if>
	</select>
	
	<!-- TODO password 안 가져오게 수정해야 함 -->
	<!-- 사용자 목록 -->
	<select id="getListUser" parameterType="userInfo" resultType="userInfo">
		/* getListUser */
		SELECT X.*, 
			(SELECT group_name FROM user_group WHERE user_group_id = X.user_group_id) AS user_group_name
		FROM (
			SELECT *
			FROM user_info
			<trim prefix="WHERE" prefixOverrides="AND">
				<if test="user_group_id != null and user_group_id > 0">
				user_group_id = #{user_group_id}
				</if>
				<if test="search_word != null and search_word != '' and search_value != null and search_value != '' and search_option == '0'.toString()">
				AND ${search_word} = #{search_value}
				</if>
				<if test="search_word != null and search_word != '' and search_value != null and search_value != '' and search_option == '1'.toString()">
				AND ${search_word} LIKE '%' || #{search_value} || '%'
				</if>
				<if test="status == null or status == ''">
				AND (status IS NULL OR status != '5')
				</if>
				<if test="status != null and status != ''">
				AND status = #{status}
				</if>
				<if test="user_insert_type != null and user_insert_type != ''">
				AND user_insert_type = #{user_insert_type}
				</if>
				<if test="search_user_name != null and search_user_name != ''">
				AND user_id LIKE '${search_user_name}%'
				</if>
				<if test="start_date != null and start_date != ''">
				<![CDATA[
				AND insert_date >= TO_TIMESTAMP(#{start_date}, 'YYYYMMDDHH24MISSUS')
				]]>
				</if>
				<if test="end_date != null and end_date != ''">
				<![CDATA[
				AND insert_date <= TO_TIMESTAMP(#{end_date}, 'YYYYMMDDHH24MISSUS')
				]]>
				</if>
			</trim>
			<choose>
			<when test="order_word != null and order_word != '' and order_value != null and order_value != ''">
			ORDER BY ${order_word} ${order_value}
			</when>
			<otherwise>
			ORDER BY insert_date DESC, user_id DESC
			</otherwise>
			</choose>
			OFFSET #{offset} LIMIT #{limit}
		) X
	</select>
	
	<!-- user_group_id를 제외한 사용자 목록 -->
	<select id="getListExceptUserGroupUserByGroupId" parameterType="userInfo" resultType="userInfo">
		/* getListExceptUserGroupUserByGroupId */
		SELECT A.*, 
			(SELECT group_name FROM user_group WHERE user_group_id = A.user_group_id) AS user_group_name
		FROM (
			SELECT *
			FROM user_info 
			<trim prefix="WHERE" prefixOverrides="AND">
				<if test="search_word != null and search_word != '' and search_value != null and search_value != ''">
				${search_word} = #{search_value}
				</if>
				<if test="user_group_id != null and user_group_id > 0">
				<![CDATA[
				AND (user_group_id > #{user_group_id}
				OR user_group_id < #{user_group_id})
				]]>
				</if>
				<if test="status != null and status != ''">
				AND status = #{status}
				</if>
				<if test="search_except_user_name != null and search_except_user_name != ''">
				AND user_id LIKE '${search_except_user_name}%'
				</if>
			</trim>
			ORDER BY insert_date DESC, user_id DESC
			OFFSET #{offset} LIMIT #{limit}
		) A
	</select>
	
	<!-- 사용자 정보 -->
	<select id="getUser" parameterType="string" resultType="userInfo">
		/* getUser */
		SELECT A.*, (SELECT group_name FROM user_group WHERE user_group_id = A.user_group_id) AS user_group_name 
		FROM user_info A
		WHERE user_id = #{user_id}
	</select>
	
	<!-- 사용자 아이디 중복 체크 -->
	<select id="getDuplicationIdCount" parameterType="string" resultType="int">
		/* getDuplicationIdCount */
		SELECT COUNT(user_id) AS count FROM user_info WHERE user_id = #{user_id}
	</select>
	
	<!-- 사용자 등록 -->
	<insert id="insertUser" parameterType="userInfo">
		/* insertUser */
		INSERT INTO user_info(
			user_id, user_group_id, user_name, password, salt, telephone, mobile_phone, email, 
			messanger, postal_code, address, address_etc, ci, di, status, user_insert_type, update_date
		) values(
			#{user_id}, #{user_group_id}, #{user_name}, #{password}, #{salt}, #{telephone}, #{mobile_phone}, #{email}, 
			#{messanger}, #{postal_code}, #{address}, #{address_etc}, #{ci}, #{di}, COALESCE(#{status}, '0'), COALESCE(#{user_insert_type}, 'SELF'), NOW()
		)
	</insert>
	
	<!-- 사용자 수정 -->	
	<update id="updateUser" parameterType="userInfo">
		/* updateUser */
		UPDATE user_info
		SET 
			<if test="user_group_id != null and user_group_id > 0">
			user_group_id = #{user_group_id},
			</if>
			<if test="user_name != null and user_name != ''">
			user_name = #{user_name},
			</if>
			<if test="password != null and password != ''">
			password = #{password},
			</if>
			<if test="telephone != null and telephone != ''">
			telephone = #{telephone},
			</if>
			<if test="mobile_phone != null and mobile_phone != ''">
			mobile_phone = #{mobile_phone},
			</if>
			<if test="email != null and email != ''">
			email = #{email},
			</if>
			<if test="messanger != null and messanger != ''">
			messanger = #{messanger},
			</if>
			<if test="employee_id != null and employee_id != ''">
			employee_id = #{employee_id},
			</if>
			postal_code = #{postal_code},
			address = #{address},
			address_etc = #{address_etc},
			<if test="status != null and status != ''">
			status = #{status},
			</if>
			<if test="db_status != null and db_status == '3'.toString()">
				<if test="status == '0'.toString() or status == '6'.toString()">
			last_login_date = NOW(),
				</if>
			</if>
			<if test="user_insert_type != null and user_insert_type != ''">
			user_insert_type = #{user_insert_type},
			</if>
			<if test="sso_use_yn != null and sso_use_yn != ''">
			sso_use_yn = #{sso_use_yn},
			</if>
			<if test="fail_login_count != null and fail_login_count >= 0">
			fail_login_count = #{fail_login_count},
			</if>
			update_date = NOW()
		WHERE user_id = #{user_id}
	</update>
	
	<!-- 사용자 테이블의 사용자 그룹 정보 변경 -->	
	<update id="updateUserGroupUser" parameterType="userInfo">
		/* updateUserGroupUser */
		UPDATE user_info
		SET user_group_id = #{user_group_id}
		WHERE user_id = #{user_id}
	</update>
	
	<!-- 사용자 상태 수정 -->	
	<update id="updateUserStatus" parameterType="userInfo">
		/* updateUserStatus */
		UPDATE user_info
		SET
		<if test="status != null and status != ''"> 
		status = #{status},
		</if>
		<if test="status != null and status == '0'.toString()">
			last_login_date = NOW(),
		</if>
		<if test="fail_login_count != null and fail_login_count == 0">
			fail_login_count = #{fail_login_count},
		</if>
			update_date = NOW()
		WHERE user_id = #{user_id}
	</update>
	
	<!-- 사용자 등록 방법에 의한 사용자 상태 수정 -->	
	<update id="updateUserStatusByInsertType" parameterType="userInfo">
		/* updateUserStatusByInsertType */
		UPDATE user_info
		SET status = #{status},
			update_date = NOW()
		WHERE user_insert_type = #{user_insert_type}
			AND status != #{status}
			AND user_id NOT IN
		<foreach collection="user_select_id" item="item" index="index" open="(" close=")" separator=",">
			#{item}
		</foreach> 
	</update>
	
	<!-- 로그인 실패 횟수 초과로 잠김 상태 사용자 해제 처리 -->	
	<update id="updateUserFailLockRelease" parameterType="userInfo">
		/* updateUserFailLockRelease */
		UPDATE user_info
		SET status = '0',
			fail_login_count = 0,
			update_date = NOW()
		WHERE status = #{status}
			<![CDATA[
			AND update_date < (NOW() - INTERVAL '${user_fail_lock_release} MINUTE')
			]]>
	</update>
	
	<!-- TODO 로그인 실패 횟수 수정, 사용자 상태 수정이랑... 중복이네... 하나로 합쳐라. -->	
	<update id="updateUserFailLoginCount" parameterType="userInfo">
		/* updateUserFailLoginCount */
		UPDATE user_info
		SET 
		<if test="status != null and status != ''">
			status = #{status},
		</if>
		<if test="status != null and status == '0'.toString()">
			last_login_date = NOW(),
		</if>
			fail_login_count = #{fail_login_count},
			update_date = NOW()
		WHERE user_id = #{user_id}
	</update>
	
	<!-- 사용자 기본 정보 중 비밀번호 정보 수정 -->
	<update id="updatePassword" parameterType="userInfo">
		/* updatePassword */
		UPDATE user_info
		SET password = #{password},
			update_date = NOW(),
			last_password_change_date = NOW(),
			<if test="db_status != null and db_status == '2'.toString()">
			fail_login_count = 0,
			</if>
			<if test="db_status != null and db_status == '3'.toString()">
			last_login_date = NOW(),
			</if>
			status = #{status}
		WHERE user_id = #{user_id}
	</update>
	
	<!-- 사용자 삭제 -->
	<delete id="deleteUser" parameterType="string">
		/* deleteUser */
		DELETE FROM user_info WHERE user_id = #{user_id}
	</delete>
	
</mapper>