<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gaia3d.persistence.SSOMapper">

	<!-- SSO 이력 총 건수 -->
	<select id="getSSOLogTotalCount" parameterType="sSOLog" resultType="long">
		/* getSSOLogTotalCount */
		SELECT COUNT(sso_log_id) 
		FROM sso_log
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="search_word != null and search_word != '' and search_value != null and search_value != '' and search_option == '0'.toString()">
			${search_word} = #{search_value}
			</if>
			<if test="search_word != null and search_word != '' and search_value != null and search_value != '' and search_option == '1'.toString()">
			${search_word} LIKE '%' || #{search_value} || '%'
			</if>
			<if test="token_status != null and token_status != ''">
			AND token_status = #{token_status}
			</if>
			<if test="start_date != null and start_date != ''">
			<![CDATA[
			AND insert_date >= TO_TIMESTAMP(#{start_date}, 'YYYYMMDDHH24MISSUS')
			]]>
			</if>
			<if test="end_date != null and end_date != ''">
			<![CDATA[
			AND insert_date <= TO_TIMESTAMP(#{end_date}, 'YYYYMMDDHH24MISSUS')
			]]>
			</if>
		</trim>
	</select>
	
	<!-- 사용자 SSO 이력 목록 -->
	<select id="getListSSOLog" parameterType="sSOLog" resultType="sSOLog">
		/* getListSSOLog */
		SELECT *
		FROM sso_log 
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="search_word != null and search_word != '' and search_value != null and search_value != '' and search_option == '0'.toString()">
			${search_word} = #{search_value}
			</if>
			<if test="search_word != null and search_word != '' and search_value != null and search_value != '' and search_option == '1'.toString()">
			${search_word} LIKE '%' || #{search_value} || '%'
			</if>
			<if test="token_status != null and token_status != ''">
			AND token_status = #{token_status}
			</if>
			<if test="start_date != null and start_date != ''">
			<![CDATA[
			AND insert_date >= TO_TIMESTAMP(#{start_date}, 'YYYYMMDDHH24MISSUS')
			]]>
			</if>
			<if test="end_date != null and end_date != ''">
			<![CDATA[
			AND insert_date <= TO_TIMESTAMP(#{end_date}, 'YYYYMMDDHH24MISSUS')
			]]>
			</if>
		</trim>
		<choose>
		<when test="order_word != null and order_word != '' and order_value != null and order_value != ''">
		ORDER BY ${order_word} ${order_value}
		</when>
		<otherwise>
		ORDER BY insert_date DESC, sso_log_id DESC
		</otherwise>
		</choose>
		OFFSET #{offset} LIMIT #{limit}
	</select>
	
	<!-- 최근 생성한 Single Sign-On 토큰 정보 -->
	<select id="getSSOToken" parameterType="sSOLog" resultType="sSOLog">
		/* getSSOToken */
		SELECT sso_log_id, token 
		FROM sso_log 
		WHERE user_id = #{user_id} AND
			token_status = '0' AND
			<![CDATA[
			insert_date >= (NOW() - INTERVAL '${security_sso_token_verify_time} MINUTE')
			]]>
		ORDER BY insert_date DESC LIMIT 1
	</select>

	<!-- Single Sign-On 토큰 생성 등록 -->
	<insert id="insertSSOLog" parameterType="sSOLog" >
		/* insertSSOLog */
		<selectKey keyProperty="sso_log_id" resultType="long" order="BEFORE">
    		SELECT NEXTVAL('sso_log_seq')
  		</selectKey>
		INSERT INTO sso_log (
			sso_log_id, user_id, server_ip, token, token_status
		) values(
			#{sso_log_id}, #{user_id}, #{server_ip}, #{token}, #{token_status}
		)
	</insert>
	
	<!-- Single Sign-On 토큰 검증 후 상태 수정 -->
	<update id="updateSSOLog" parameterType="sSOLog">
		/* updateSSOLog */
		UPDATE sso_log
		SET token_status = #{token_status},
			device_kind = #{device_kind},
			request_type = #{request_type},
			redirect_url = #{redirect_url},
			update_date = NOW()
		WHERE sso_log_id = #{sso_log_id}
	</update>
	
	<!-- Single Sign-On 로그 정보 삭제 -->
	<update id="deleteSSOLog" parameterType="string">
		/* deleteSSOLog */
		UPDATE sso_log 
		SET user_id = '*****'||user_id
		WHERE user_id = #{user_id}
	</update>
</mapper>